{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowUp.js","../../../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../../../node_modules/@material-ui/icons/KeyboardArrowRight.js","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Controls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/util.ts","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","importFormContainer","padding","spacing","margin","ErrorDisplay","observer","error","Typography","variant","color","DotplotImportForm","model","classes","session","getSession","assemblyNames","assemblyManager","useState","trackData","setTrackData","selected1","setSelected1","selected2","setSelected2","selected","asmError","map","a","get","filter","f","join","err","length","Container","className","Grid","container","justifyContent","alignItems","style","width","item","Paper","textAlign","AssemblySelector","onChange","val","href","name","description","location","setLocation","loc","Button","data-testid","onClick","setViews","bpPerPx","offsetPx","setAssemblyNames","fileName","uri","slice","lastIndexOf","configuration","addTrackConf","trackId","Date","now","type","adapter","pafLocation","toggleTrack","disabled","iconButton","controls","overflow","background","whiteSpace","position","boxSizing","border","right","top","zIndex","DotplotControls","IconButton","hview","scroll","title","vview","zoomOutButton","zoomInButton","activateTrackSelector","locstr","px","view","pxToBp","refName","start","offset","oob","coord","Math","floor","toLocaleString","getBlockLabelKeysToHide","blocks","viewOffsetPx","blockLabelKeysToHide","sortedBlocks","sort","b","alen","end","positions","Array","round","forEach","key","y","labelBounds","max","some","Boolean","push","fill","chooseGridPitch","scale","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","abs","majorMagnitude","parseInt","Number","toExponential","split","majorPitch","majorPitchPx","minorPitch","makeTicks","regions","emitMajor","emitMinor","ticks","gridPitch","iterPitch","i","region","index","minBase","maxBase","base","ceil","vtext","gridColumn","gridRow","pointerEvents","htext","majorTickLabel","fontSize","majorTick","stroke","minorTick","HorizontalAxis","viewWidth","borderY","htextRotation","hide","dynamicBlocks","contentBlocks","staticBlocks","height","includes","x","transform","JSON","stringify","dominantBaseline","textAnchor","tick","bpToPx","x1","x2","y1","y2","strokeWidth","data-bp","VerticalAxis","borderX","viewHeight","vtextRotation","spacer","root","marginBottom","viewContainer","marginTop","display","overlay","cursor","content","popover","maxWidth","wordBreak","children","hblocks","vblocks","htop","displayedRegionsTotalPx","hbottom","vtop","vbottom","getOffset","rect","left","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseupClient","setMouseUpClient","ref","useRef","distanceX","distanceY","lref","rref","timeout","delta","scheduled","blank","svg","current","getBoundingClientRect","rrect","lrect","mousedown","mousecurr","mouseup","mouserect","useEffect","onWheel","origEvent","event","normalizeWheel","preventDefault","ctrlKey","pixelY","setScaleFactor","clearTimeout","setTimeout","transaction","zoomTo","pixelX","window","requestAnimationFrame","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","undefined","Controls","scaleFactor","role","onMouseDown","button","min","tracks","track","displays","RenderingComponent","getConf","open","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","menuItems","label","zoomIn","onDotplotView","DotplotView","initialized","loading","ImportForm","LinearProgress"],"mappings":"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","file":"23.ff8da6869c2040672276.worker.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport {\n  Button,\n  Paper,\n  Container,\n  Grid,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n}))\n\nconst ErrorDisplay = observer(({ error }: { error?: Error | string }) => {\n  return (\n    <Typography variant=\"h6\" color=\"error\">\n      {`${error}`}\n    </Typography>\n  )\n})\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const [trackData, setTrackData] = useState<FileLocation>()\n  const [selected1, setSelected1] = useState(assemblyNames[0])\n  const [selected2, setSelected2] = useState(assemblyNames[0])\n  const selected = [selected1, selected2]\n\n  const asmError = selected\n    .map(a => assemblyManager.get(a)?.error)\n    .filter(f => !!f)\n    .join(', ')\n  const err = assemblyNames.length ? asmError : 'No configured assemblies'\n\n  function onOpenClick() {\n    model.setViews([\n      { bpPerPx: 0.1, offsetPx: 0 },\n      { bpPerPx: 0.1, offsetPx: 0 },\n    ])\n    model.setAssemblyNames([selected1, selected2])\n\n    const fileName =\n      trackData && 'uri' in trackData && trackData.uri\n        ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n        : 'MyTrack'\n\n    // @ts-ignore\n    const configuration = session.addTrackConf({\n      trackId: `${fileName}-${Date.now()}`,\n      name: fileName,\n      assemblyNames: selected,\n      type: 'SyntenyTrack',\n      adapter: {\n        type: 'PAFAdapter',\n        pafLocation: trackData,\n        assemblyNames: selected,\n      },\n    })\n    model.toggleTrack(configuration.trackId)\n  }\n\n  return (\n    <Container className={classes.importFormContainer}>\n      {err ? <ErrorDisplay error={err} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ width: '50%', margin: '0 auto' }}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <AssemblySelector\n              selected={selected1}\n              onChange={val => setSelected1(val)}\n              session={session}\n            />\n            <AssemblySelector\n              selected={selected2}\n              onChange={val => setSelected2(val)}\n              session={session}\n            />\n          </Paper>\n\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              <b>Optional</b>: Add a PAF{' '}\n              <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n                (pairwise mapping format)\n              </a>{' '}\n              file for the dotplot view. Note that the first assembly should be\n              the left column of the PAF and the second assembly should be the\n              right column\n            </p>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <FileSelector\n                  name=\"URL\"\n                  description=\"\"\n                  location={trackData}\n                  setLocation={loc => setTrackData(loc)}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <Button\n            data-testid=\"submitDotplot\"\n            onClick={onOpenClick}\n            disabled={!!err}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { observer } from 'mobx-react'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles({\n  iconButton: {\n    padding: '4px',\n    margin: '0 2px 0 2px',\n  },\n  controls: {\n    overflow: 'hidden',\n    background: 'white',\n    whiteSpace: 'nowrap',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    border: '1px solid #a2a2a2',\n    right: 0,\n    top: 0,\n    zIndex: 1001, // needs to be above overlay but below things that might naturally go on top of it like a context menu from jbrowse-core/ui\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowDown />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowUp />\n      </IconButton>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        title=\"Open track selector\"\n        value=\"track_select\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { Dotplot1DViewModel } from '../model'\n\nexport function locstr(px: number, view: Dotplot1DViewModel) {\n  const { refName, start, offset, oob } = view.pxToBp(px)\n  const coord = Math.floor(start + offset)\n  return oob ? 'out of bounds' : `${refName}:${coord.toLocaleString('en-US')}`\n}\n\nexport function getBlockLabelKeysToHide(\n  blocks: BaseBlock[],\n  length: number,\n  viewOffsetPx: number,\n) {\n  const blockLabelKeysToHide: string[] = []\n  const sortedBlocks = blocks.slice(0).sort((a, b) => {\n    const alen = a.end - a.start\n    const blen = b.end - b.start\n    return blen - alen\n  })\n  const positions = new Array(Math.round(length))\n  sortedBlocks.forEach(({ key, offsetPx }) => {\n    const y = Math.round(length - offsetPx + viewOffsetPx)\n    const labelBounds = [Math.max(y - 12, 0), y]\n    if (y === 0 || positions.slice(...labelBounds).some(Boolean)) {\n      blockLabelKeysToHide.push(key)\n    } else {\n      positions.fill(true, ...labelBounds)\n    }\n  })\n  return blockLabelKeysToHide\n}\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  regions: BaseBlock[],\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const ticks = []\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  for (let i = 0; i < regions.length; i++) {\n    const region = regions[i]\n    const { start, end, refName } = region\n    let index = 0\n\n    const minBase = start\n    const maxBase = end\n    for (\n      let base = Math.ceil(minBase / iterPitch) * iterPitch;\n      base < maxBase;\n      base += iterPitch\n    ) {\n      if (emitMinor && base % gridPitch.majorPitch) {\n        ticks.push({ type: 'minor', base: base - 1, index, refName })\n        index += 1\n      } else if (\n        emitMajor &&\n        Math.abs(base - region.start) > gridPitch.minorPitch\n      ) {\n        ticks.push({ type: 'major', base: base - 1, index, refName })\n        index += 1\n      }\n    }\n  }\n  return ticks\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getBlockLabelKeysToHide, makeTicks } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n  },\n  majorTick: {\n    stroke: '#555',\n  },\n  minorTick: {\n    stroke: '#999',\n  },\n}))\n\nexport const HorizontalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { viewWidth, borderY, hview, htextRotation } = model\n    const hide = getBlockLabelKeysToHide(\n      hview.dynamicBlocks.contentBlocks,\n      viewWidth,\n      hview.offsetPx,\n    )\n    const ticks = makeTicks(hview.staticBlocks.contentBlocks, hview.bpPerPx)\n    return (\n      <svg width={viewWidth} height={borderY} className={classes.htext}>\n        <g>\n          {hview.dynamicBlocks.contentBlocks\n            .filter(region => !hide.includes(region.key))\n            .map(region => {\n              const x = region.offsetPx\n              const y = 0\n              return (\n                <text\n                  transform={`rotate(${htextRotation},${\n                    x - hview.offsetPx\n                  },${y})`}\n                  key={JSON.stringify(region)}\n                  x={x - hview.offsetPx}\n                  y={y + 1}\n                  fill=\"#000000\"\n                  dominantBaseline=\"hanging\"\n                  textAnchor=\"end\"\n                >\n                  {`${region.refName}:${\n                    region.start !== 0\n                      ? Math.floor(region.start).toLocaleString('en-US')\n                      : ''\n                  }`}\n                </text>\n              )\n            })}\n          {ticks.map(tick => {\n            const x =\n              (hview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              hview.offsetPx\n            return (\n              <line\n                key={`line-${JSON.stringify(tick)}`}\n                x1={x}\n                x2={x}\n                y1={0}\n                y2={tick.type === 'major' ? 6 : 4}\n                strokeWidth={1}\n                stroke={tick.type === 'major' ? '#555' : '#999'}\n                className={\n                  tick.type === 'major' ? classes.majorTick : classes.minorTick\n                }\n                data-bp={tick.base}\n              />\n            )\n          })}\n          {ticks\n            .filter(tick => tick.type === 'major')\n            .map(tick => {\n              const x =\n                (hview.bpToPx({ refName: tick.refName, coord: tick.base }) ||\n                  0) - hview.offsetPx\n              const y = 0\n              return (\n                <text\n                  x={x - 7}\n                  y={y}\n                  transform={`rotate(${htextRotation},${x},${y})`}\n                  key={`text-${JSON.stringify(tick)}`}\n                  style={{ fontSize: '11px' }}\n                  className={classes.majorTickLabel}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"end\"\n                >\n                  {(tick.base + 1).toLocaleString('en-US')}\n                </text>\n              )\n            })}\n        </g>\n      </svg>\n    )\n  },\n)\nexport const VerticalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { borderX, viewHeight, vview, vtextRotation } = model\n    const hide = getBlockLabelKeysToHide(\n      vview.dynamicBlocks.contentBlocks,\n      viewHeight,\n      vview.offsetPx,\n    )\n    const ticks = makeTicks(vview.staticBlocks.contentBlocks, vview.bpPerPx)\n    return (\n      <svg className={classes.vtext} width={borderX} height={viewHeight}>\n        <g>\n          {vview.dynamicBlocks.contentBlocks\n            .filter(region => !hide.includes(region.key))\n            .map(region => {\n              const y = region.offsetPx\n              const x = borderX\n              return (\n                <text\n                  transform={`rotate(${vtextRotation},${x},${y})`}\n                  key={JSON.stringify(region)}\n                  x={borderX}\n                  y={viewHeight - y + vview.offsetPx}\n                  fill=\"#000000\"\n                  textAnchor=\"end\"\n                >\n                  {`${region.refName}:${\n                    region.start !== 0 ? Math.floor(region.start) : ''\n                  }`}\n                </text>\n              )\n            })}\n          {ticks.map(tick => {\n            const y =\n              (vview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              vview.offsetPx\n            return (\n              <line\n                key={`line-${JSON.stringify(tick)}`}\n                y1={viewHeight - y}\n                y2={viewHeight - y}\n                x1={borderX}\n                x2={borderX - (tick.type === 'major' ? 6 : 4)}\n                strokeWidth={1}\n                stroke={tick.type === 'major' ? '#555' : '#999'}\n                className={\n                  tick.type === 'major' ? classes.majorTick : classes.minorTick\n                }\n                data-bp={tick.base}\n              />\n            )\n          })}\n          {ticks\n            .filter(tick => tick.type === 'major')\n            .map(tick => {\n              const y =\n                (vview.bpToPx({ refName: tick.refName, coord: tick.base }) ||\n                  0) - vview.offsetPx\n              return (\n                <text\n                  y={viewHeight - y - 3}\n                  x={borderX - 7}\n                  key={`text-${JSON.stringify(tick)}`}\n                  textAnchor=\"end\"\n                  dominantBaseline=\"hanging\"\n                  style={{ fontSize: '11px' }}\n                  className={classes.majorTickLabel}\n                >\n                  {(tick.base + 1).toLocaleString('en-US')}\n                </text>\n              )\n            })}\n        </g>\n      </svg>\n    )\n  },\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles, LinearProgress } from '@material-ui/core'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport normalizeWheel from 'normalize-wheel'\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Controls from './Controls'\nimport { locstr } from './util'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\n\nconst useStyles = makeStyles(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n  viewContainer: {\n    marginTop: '3px',\n  },\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  popover: {\n    background: '#fff',\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: '1px solid black',\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Timer = ReturnType<typeof setTimeout>\ntype Rect = { left: number; top: number }\n\nconst Grid = observer(\n  ({\n    model,\n    children,\n    stroke = '#000a',\n  }: {\n    model: DotplotViewModel\n    children: React.ReactNode\n    stroke?: string\n  }) => {\n    const { viewWidth, viewHeight, hview, vview } = model\n    const hblocks = hview.dynamicBlocks.contentBlocks\n    const vblocks = vview.dynamicBlocks.contentBlocks\n    const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n    const hbottom = hblocks[0].offsetPx - hview.offsetPx\n    const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n    const vbottom = vblocks[0].offsetPx - vview.offsetPx\n    return (\n      <svg\n        style={{ background: 'rgba(0,0,0,0.12)' }}\n        width={viewWidth}\n        height={viewHeight}\n      >\n        <rect\n          x={hbottom}\n          y={viewHeight - vtop}\n          width={htop - hbottom}\n          height={vtop - vbottom}\n          fill=\"#fff\"\n        />\n        <g>\n          {hblocks.map(region => {\n            const x = region.offsetPx - hview.offsetPx\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={viewHeight}\n                stroke={stroke}\n              />\n            )\n          })}\n          {vblocks.map(region => {\n            const y = viewHeight - (region.offsetPx - vview.offsetPx)\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={0}\n                y1={y}\n                x2={viewWidth}\n                y2={y}\n                stroke={stroke}\n              />\n            )\n          })}\n          <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n          <line\n            x1={0}\n            y1={viewHeight - vtop}\n            x2={viewWidth}\n            y2={viewHeight - vtop}\n            stroke={stroke}\n          />\n        </g>\n        {children}\n      </svg>\n    )\n  },\n)\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst DotplotViewInternal = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { hview, vview, viewHeight } = model\n    const classes = useStyles()\n    const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n    const [mousedownClient, setMouseDownClient] = useState<Coord>()\n    const [mouseupClient, setMouseUpClient] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const root = useRef<HTMLDivElement>(null)\n    const distanceX = useRef(0)\n    const distanceY = useRef(0)\n    const lref = useRef<HTMLDivElement>(null)\n    const rref = useRef<HTMLDivElement>(null)\n    const timeout = useRef<Timer>()\n    const delta = useRef(0)\n    const scheduled = useRef(false)\n    const blank = { left: 0, top: 0, width: 0, height: 0 }\n    const svg = ref.current?.getBoundingClientRect() || blank\n    const rrect = rref.current?.getBoundingClientRect() || blank\n    const lrect = lref.current?.getBoundingClientRect() || blank\n    const mousedown = getOffset(mousedownClient, svg)\n    const mousecurr = getOffset(mousecurrClient, svg)\n    const mouseup = getOffset(mouseupClient, svg)\n    const mouserect = mouseup || mousecurr\n\n    // use non-React wheel handler to properly prevent body scrolling\n    useEffect(() => {\n      function onWheel(origEvent: WheelEvent) {\n        const event = normalizeWheel(origEvent)\n        origEvent.preventDefault()\n        if (origEvent.ctrlKey === true) {\n          delta.current += event.pixelY / 500\n          model.vview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          model.hview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          if (timeout.current) {\n            clearTimeout(timeout.current)\n          }\n          timeout.current = setTimeout(() => {\n            transaction(() => {\n              model.hview.setScaleFactor(1)\n              model.vview.setScaleFactor(1)\n              model.hview.zoomTo(\n                delta.current > 0\n                  ? model.hview.bpPerPx * (1 + delta.current)\n                  : model.hview.bpPerPx / (1 - delta.current),\n              )\n              model.vview.zoomTo(\n                delta.current > 0\n                  ? model.vview.bpPerPx * (1 + delta.current)\n                  : model.vview.bpPerPx / (1 - delta.current),\n              )\n            })\n            delta.current = 0\n          }, 300)\n        } else {\n          distanceX.current += event.pixelX\n          distanceY.current -= event.pixelY\n          if (!scheduled.current) {\n            scheduled.current = true\n\n            window.requestAnimationFrame(() => {\n              transaction(() => {\n                model.hview.scroll(distanceX.current)\n                model.vview.scroll(distanceY.current)\n              })\n              scheduled.current = false\n              distanceX.current = 0\n              distanceY.current = 0\n            })\n          }\n        }\n      }\n      if (ref.current) {\n        const curr = ref.current\n        curr.addEventListener('wheel', onWheel)\n        return () => {\n          curr.removeEventListener('wheel', onWheel)\n        }\n      }\n      return () => {}\n    }, [model.hview, model.vview])\n\n    useEffect(() => {\n      function globalMouseMove(event: MouseEvent) {\n        setMouseCurrClient([event.clientX, event.clientY])\n      }\n\n      window.addEventListener('mousemove', globalMouseMove)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n      }\n    }, [])\n\n    // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n    // once that single mouseup is set\n    useEffect(() => {\n      let cleanup = () => {}\n\n      function globalMouseUp(event: MouseEvent) {\n        if (\n          mousedown &&\n          mousecurr &&\n          Math.abs(mousedown[0] - mousecurr[0]) > 3 &&\n          Math.abs(mousedown[1] - mousecurr[1]) > 3\n        ) {\n          setMouseUpClient([event.clientX, event.clientY])\n        } else {\n          setMouseDownClient(undefined)\n        }\n      }\n\n      if (mousedown && !mouseup) {\n        window.addEventListener('mouseup', globalMouseUp, true)\n        cleanup = () => {\n          window.removeEventListener('mouseup', globalMouseUp, true)\n        }\n      }\n      return cleanup\n    }, [mousedown, mousecurr, mouseup])\n\n    return (\n      <div ref={root} className={classes.root}>\n        <Controls model={model} />\n\n        <div className={classes.container}>\n          <div\n            style={{\n              display: 'grid',\n              transform: `scaleX(${model.hview.scaleFactor}) scaleY(${model.vview.scaleFactor})`,\n            }}\n          >\n            <VerticalAxis model={model} />\n            <HorizontalAxis model={model} />\n            <div\n              ref={ref}\n              style={{ position: 'relative' }}\n              className={classes.content}\n            >\n              {mouserect ? (\n                <div\n                  ref={lref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mouserect[0] -\n                      (mousedown && mouserect[0] - mousedown[0] < 0\n                        ? lrect.width\n                        : 0),\n                    top:\n                      mouserect[1] -\n                      (mousedown && mouserect[1] - mousedown[1] < 0\n                        ? lrect.height\n                        : 0),\n                  }}\n                >\n                  {`x-${locstr(mouserect[0], hview)}`}\n                  <br />\n                  {`y-${locstr(viewHeight - mouserect[1], vview)}`}\n                </div>\n              ) : null}\n              {mousedown &&\n              mouserect &&\n              Math.abs(mousedown[0] - mouserect[0]) > 3 &&\n              Math.abs(mousedown[1] - mouserect[1]) > 3 ? (\n                <div\n                  ref={rref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mousedown[0] -\n                      (mouserect[0] - mousedown[0] < 0 ? 0 : rrect.width),\n                    top:\n                      mousedown[1] -\n                      (mouserect[1] - mousedown[1] < 0 ? 0 : rrect.height),\n                  }}\n                >\n                  {`x-${locstr(mousedown[0], hview)}`}\n                  <br />\n                  {`y-${locstr(viewHeight - mousedown[1], vview)}`}\n                </div>\n              ) : null}\n\n              <div\n                role=\"presentation\"\n                style={{ cursor: 'crosshair' }}\n                onMouseDown={event => {\n                  if (event.button === 0) {\n                    setMouseDownClient([event.clientX, event.clientY])\n                    setMouseCurrClient([event.clientX, event.clientY])\n                  }\n                }}\n              >\n                <Grid model={model}>\n                  {mousedown && mouserect ? (\n                    <rect\n                      fill=\"rgba(255,0,0,0.3)\"\n                      x={Math.min(mouserect[0], mousedown[0])}\n                      y={Math.min(mouserect[1], mousedown[1])}\n                      width={Math.abs(mouserect[0] - mousedown[0])}\n                      height={Math.abs(mouserect[1] - mousedown[1])}\n                    />\n                  ) : null}\n                </Grid>\n              </div>\n              <div className={classes.spacer} />\n            </div>\n            <div className={classes.overlay}>\n              {model.tracks.map(track => {\n                const [display] = track.displays\n                const { RenderingComponent } = display\n\n                return RenderingComponent ? (\n                  <RenderingComponent\n                    key={getConf(track, 'trackId')}\n                    model={display}\n                  />\n                ) : null\n              })}\n            </div>\n            <Menu\n              open={Boolean(mouseup)}\n              onMenuItemClick={(_, callback) => {\n                callback()\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              onClose={() => {\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              anchorReference=\"anchorPosition\"\n              anchorPosition={\n                mouseupClient\n                  ? {\n                      top: mouseupClient[1] + 30,\n                      left: mouseupClient[0] + 30,\n                    }\n                  : undefined\n              }\n              style={{ zIndex: 1000 }}\n              menuItems={[\n                {\n                  label: 'Zoom in',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.zoomIn(mousedown, mouseup)\n                    }\n                  },\n                },\n                {\n                  label: 'Open linear synteny view',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.onDotplotView(mousedown, mouseup)\n                    }\n                  },\n                },\n              ]}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <p>Loading...</p>\n        <LinearProgress />\n      </div>\n    )\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n"],"sourceRoot":""}