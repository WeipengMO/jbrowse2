{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowUp.js","../../../node_modules/@material-ui/icons/FilterList.js","../../../node_modules/@material-ui/icons/PermDataSetting.js","../../../node_modules/@material-ui/icons/CropFree.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnMenu.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/Spreadsheet.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/GlobalFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","buttonContainer","marginTop","NumberEditor","observer","model","disabled","modelPropName","modelSetterName","useState","val","setVal","useEffect","num","parseInt","Number","type","onChange","evt","style","width","verticalAlign","ErrorDisplay","error","variant","color","ImportForm","session","getSession","classes","assemblyNames","assemblyManager","fileType","fileTypes","setFileType","hasColumnNameLine","toggleHasColumnNameLine","selected","setSelected","err","showRowControls","margin","container","spacing","direction","alignItems","item","component","location","setLocation","setFileSource","className","formControl","aria-label","name","fileTypeName","key","checked","onClick","control","label","labelPlacement","canCancel","data-testid","errorContainer","errorMessage","viewModel","spreadsheetModel","currentColumnMenu","setColumnMenu","columnMenuClose","columnNumber","sortMenuClick","descending","dataTypeChoices","dataTypeTopLevelMenu","dataTypeRecord","displayName","categoryName","isCategory","subMenuItems","dataType","dataTypeName","dataTypeDisplayName","isSortingAscending","Boolean","col","isSortingDescending","menuItems","icon","subMenu","record","typeName","menuEntry","i","subTypeName","filterMenuClick","anchorEl","open","onMenuItemClick","callback","onClose","anchorOrigin","vertical","horizontal","RowMenu","currentRowMenu","rowMenuPosition","setRowMenuPosition","rowMenuClose","rowNumber","undefined","row","rowSet","rows","rowMenuItems","map","_event","root","position","marginBottom","background","grey","overflow","dataTable","borderCollapse","borderSpacing","boxSizing","border","padding","maxWidth","textOverflow","dataTableBody","rowNumCell","textAlign","whiteSpace","userSelect","fontWeight","display","flex","paddingRight","rowMenuButton","right","rowMenuButtonIcon","rowSelector","top","columnHead","zIndex","sortIndicator","fontSize","columnButtonContainer","height","borderLeft","columnButton","topLeftCorner","minWidth","dataRowSelected","indigo","emptyMessage","captionSide","CellData","cell","spreadsheet","DataRow","rowModel","hideRowSelection","columnDisplayOrder","rowClass","labelClick","id","event","colNumber","SortIndicator","sortSpec","c","DataTableBody","page","rowsPerPage","DataTable","columns","hasColumnNames","currentTarget","currentHoveredColumn","setHoveredColumn","totalRows","getParent","title","placement","columnButtonIcon","onMouseOver","columnHeaderMouseOver","onMouseOut","columnHeaderMouseOut","String","n","letterFor","Math","RangeError","numToColName","columnButtonClick","textFilterControlEndAdornment","marginRight","TextFilter","textFilter","textFilterValue","setTextFilterValue","debouncedTextFilter","useDebounce","filterControls","InputProps","startAdornment","endAdornment","columnName","columnFilter","filterIcon","filterIconBg","FilterOperations","filterModel","columnDefinition","Error","header","paddingLeft","contentArea","viewControls","rowCount","marginLeft","statusBar","left","bottom","borderTop","verticallyCenter","justifyContent","flexDirection","spacer","flexGrow","textFilterControlAdornment","ViewControls","RowCountMessage","passingFiltersCount","count","selectedCount","selectedAndPassingFiltersCount","rowMessage","selectedAndNotPassingFiltersCount","SpreadsheetView","colFilterCount","setPage","setRowsPerPage","filter","importWizard","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","onDrag"],"mappings":"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","file":"19.ff8da6869c2040672276.worker.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'PermDataSetting');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z\"\n}), 'CropFree');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  RadioGroup,\n  Radio,\n  Container,\n  Button,\n  Grid,\n  Typography,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\n\nconst useStyles = makeStyles(theme => ({\n  buttonContainer: { marginTop: theme.spacing(1) },\n}))\n\nconst NumberEditor = observer(\n  ({ model, disabled, modelPropName, modelSetterName }) => {\n    const [val, setVal] = useState(model[modelPropName])\n    useEffect(() => {\n      const num = parseInt(val, 10)\n      if (!Number.isNaN(num)) {\n        if (num > 0) {\n          model[modelSetterName](num)\n        } else {\n          setVal(1)\n        }\n      }\n    }, [model, modelSetterName, val])\n    return (\n      <TextField\n        value={val}\n        disabled={disabled}\n        type=\"number\"\n        onChange={evt => setVal(evt.target.value)}\n        style={{ width: '2rem', verticalAlign: 'baseline' }}\n      />\n    )\n  },\n)\n\nconst ErrorDisplay = observer(({ error }) => {\n  return (\n    <Typography variant=\"h6\" color=\"error\">\n      {`${error}`}\n    </Typography>\n  )\n})\n\nconst ImportForm = observer(({ model }) => {\n  const session = getSession(model)\n  const classes = useStyles()\n  const { assemblyNames, assemblyManager } = session\n  const {\n    fileType,\n    fileTypes,\n    setFileType,\n    hasColumnNameLine,\n    toggleHasColumnNameLine,\n  } = model\n  const [selected, setSelected] = useState(assemblyNames[0])\n  const err = assemblyManager.get(selected)?.error\n  const showRowControls = model.fileType === 'CSV' || model.fileType === 'TSV'\n\n  return (\n    <Container>\n      {err ? <ErrorDisplay error={err} /> : null}\n      <Grid\n        style={{ width: '25rem', margin: '0 auto' }}\n        container\n        spacing={1}\n        direction=\"column\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Tabular file</FormLabel>\n            <FormGroup>\n              <FileSelector\n                location={model.fileSource}\n                setLocation={model.setFileSource}\n              />\n            </FormGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">File Type</FormLabel>\n            <RadioGroup aria-label=\"file type\" name=\"type\" value={fileType}>\n              <Grid container spacing={1} direction=\"row\">\n                {fileTypes.map(fileTypeName => {\n                  return (\n                    <Grid item key={fileTypeName}>\n                      <FormControlLabel\n                        checked={fileType === fileTypeName}\n                        value={fileTypeName}\n                        onClick={() => setFileType(fileTypeName)}\n                        control={<Radio />}\n                        label={fileTypeName}\n                      />\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        {showRowControls ? (\n          <Grid item>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n              <FormLabel component=\"legend\">Column Names</FormLabel>\n              <div>\n                <FormControlLabel\n                  disabled={!showRowControls}\n                  label=\"has column names on line\"\n                  labelPlacement=\"end\"\n                  control={\n                    <Checkbox\n                      checked={hasColumnNameLine}\n                      onClick={toggleHasColumnNameLine}\n                    />\n                  }\n                />\n                <NumberEditor\n                  model={model}\n                  disabled={!showRowControls || !hasColumnNameLine}\n                  modelPropName=\"columnNameLineNumber\"\n                  modelSetterName=\"setColumnNameLineNumber\"\n                />\n              </div>\n            </FormControl>\n          </Grid>\n        ) : null}\n        <Grid item>\n          <AssemblySelector\n            session={session}\n            selected={selected}\n            onChange={val => setSelected(val)}\n          />\n        </Grid>\n        <Grid item className={classes.buttonContainer}>\n          {model.canCancel ? (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={model.cancelButton}\n              disabled={!model.canCancel}\n            >\n              Cancel\n            </Button>\n          ) : null}{' '}\n          <Button\n            disabled={!model.isReadyToOpen || !!err}\n            variant=\"contained\"\n            data-testid=\"open_spreadsheet\"\n            color=\"primary\"\n            onClick={() => model.import(selected)}\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nconst ImportWizard = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.error ? (\n        <Container className={classes.errorContainer}>\n          <ErrorDisplay errorMessage={`${model.error}`} />\n        </Container>\n      ) : null}\n      <ImportForm model={model} />\n    </>\n  )\n})\n\nexport default ImportWizard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { iterMap } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport CheckIcon from '@material-ui/icons/Check'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting'\nimport SortIcon from '@material-ui/icons/Sort'\n\nconst ColumnMenu = observer(\n  ({ viewModel, spreadsheetModel, currentColumnMenu, setColumnMenu }) => {\n    const columnMenuClose = () => {\n      setColumnMenu(null)\n    }\n\n    function handleMenuItemClick(event, callback) {\n      callback()\n      columnMenuClose(null)\n    }\n\n    const columnNumber = currentColumnMenu && currentColumnMenu.colNumber\n\n    const sortMenuClick = descending => {\n      spreadsheetModel.setSortColumns([\n        {\n          columnNumber,\n          descending,\n        },\n      ])\n    }\n\n    const filterMenuClick = () => {\n      viewModel.filterControls.addBlankColumnFilter(columnNumber)\n    }\n\n    const { dataTypeChoices } = spreadsheetModel\n\n    // make a Map of categoryName => [entry...]\n    const dataTypeTopLevelMenu = new Map()\n    dataTypeChoices.forEach(dataTypeRecord => {\n      const { displayName, categoryName } = dataTypeRecord\n      if (categoryName) {\n        if (!dataTypeTopLevelMenu.has(categoryName)) {\n          dataTypeTopLevelMenu.set(categoryName, {\n            isCategory: true,\n            subMenuItems: [],\n          })\n        }\n        dataTypeTopLevelMenu.get(categoryName).subMenuItems.push(dataTypeRecord)\n      } else {\n        dataTypeTopLevelMenu.set(displayName, dataTypeRecord)\n      }\n    })\n\n    const dataType =\n      currentColumnMenu && spreadsheetModel.columns[columnNumber].dataType\n    const dataTypeName = (dataType && dataType.type) || ''\n    const dataTypeDisplayName =\n      (currentColumnMenu &&\n        spreadsheetModel.columns[columnNumber].dataType.displayName) ||\n      ''\n\n    const isSortingAscending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && !col.descending,\n        ),\n    )\n    const isSortingDescending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && col.descending,\n        ),\n    )\n    function stopSortingClick() {\n      columnMenuClose()\n      spreadsheetModel.setSortColumns([])\n    }\n\n    const menuItems = [\n      // top-level column menu\n      {\n        label: 'Sort ascending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingAscending,\n        onClick: isSortingAscending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, false),\n      },\n      {\n        label: 'Sort descending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingDescending,\n        onClick: isSortingDescending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, true),\n      },\n      // data type menu\n      {\n        label: `Type: ${dataTypeDisplayName}`,\n        icon: PermDataSettingIcon,\n        subMenu: iterMap(\n          dataTypeTopLevelMenu.entries(),\n          ([displayName, record]) => {\n            const { subMenuItems, typeName } = record\n            if (typeName) {\n              const menuEntry = {\n                label: displayName || typeName,\n                onClick: () => {\n                  spreadsheetModel.setColumnType(columnNumber, typeName)\n                },\n              }\n              if (dataTypeName === typeName) {\n                menuEntry.icon = CheckIcon\n              }\n              return menuEntry\n            }\n            if (subMenuItems) {\n              return {\n                label: displayName,\n                icon: subMenuItems.find(i => i.typeName === dataTypeName)\n                  ? CheckIcon\n                  : undefined,\n                subMenu: subMenuItems.map(\n                  ({ typeName: subTypeName, displayName: subDisplayName }) => ({\n                    label: subDisplayName,\n                    icon: subTypeName === dataTypeName ? CheckIcon : undefined,\n                    onClick: () => {\n                      spreadsheetModel.setColumnType(columnNumber, subTypeName)\n                    },\n                  }),\n                ),\n              }\n            }\n            return null\n          },\n        ).filter(Boolean),\n      },\n    ]\n\n    // don't display the filter item if this data type doesn't have filtering\n    // implemented\n    if (dataType && dataType.hasFilter) {\n      menuItems.push({\n        label: 'Create filter',\n        icon: FilterListIcon,\n        onClick: filterMenuClick.bind(null, true),\n      })\n    }\n\n    return (\n      <Menu\n        anchorEl={currentColumnMenu && currentColumnMenu.anchorEl}\n        open={Boolean(currentColumnMenu)}\n        onMenuItemClick={handleMenuItemClick}\n        onClose={columnMenuClose}\n        menuItems={menuItems}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      />\n    )\n  },\n)\n\nexport default ColumnMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Menu, MenuItem } from '@jbrowse/core/ui'\nimport { InstanceOfModelReturnedBy } from '@jbrowse/core/util'\n\nimport SpreadsheetModelF from '../models/Spreadsheet'\nimport ViewModelF from '../models/SpreadsheetView'\n\nexport interface Props {\n  viewModel: InstanceOfModelReturnedBy<typeof ViewModelF>\n  spreadsheetModel: InstanceOfModelReturnedBy<typeof SpreadsheetModelF>\n}\n\nconst RowMenu = observer(({ viewModel, spreadsheetModel }: Props) => {\n  const currentRowMenu = spreadsheetModel.rowMenuPosition\n  const { setRowMenuPosition } = spreadsheetModel\n\n  const rowMenuClose = () => {\n    setRowMenuPosition(null)\n  }\n\n  const rowNumber = spreadsheetModel.rowMenuPosition?.rowNumber\n  if (rowNumber === undefined) {\n    return null\n  }\n\n  const row = spreadsheetModel.rowSet.rows[rowNumber - 1]\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(viewModel, spreadsheetModel, rowNumber, row)\n    rowMenuClose()\n  }\n\n  // got through and evaluate all the `disabled` callbacks of the menu items\n  const menuItems: MenuItem[] = viewModel.rowMenuItems.map(item => {\n    if (typeof item.disabled === 'function') {\n      const disabled = item.disabled(\n        viewModel,\n        spreadsheetModel,\n        rowNumber,\n        row,\n      )\n      return { ...item, disabled }\n    }\n    return item\n  })\n\n  return (\n    <Menu\n      anchorEl={currentRowMenu && currentRowMenu.anchorEl}\n      open={Boolean(currentRowMenu)}\n      onMenuItemClick={handleMenuItemClick}\n      onClose={rowMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default RowMenu\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { grey, indigo } from '@material-ui/core/colors'\nimport {\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport ColumnMenu from './ColumnMenu'\nimport RowMenu from './RowMenu'\n\n/* eslint-disable react/prop-types */\nexport function numToColName(num) {\n  function letterFor(n) {\n    return String.fromCharCode(n + 65)\n  }\n  if (num >= 0) {\n    if (num < 26) {\n      return letterFor(num)\n    }\n    if (num < 27 * 26) {\n      return letterFor(Math.floor(num / 26 - 1)) + letterFor(num % 26)\n    }\n  }\n\n  throw new RangeError('column number out of range')\n}\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      background: grey[500],\n      overflow: 'auto',\n    },\n    dataTable: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      boxSizing: 'border-box',\n      '& td': {\n        border: `1px solid ${grey[300]}`,\n        padding: '0.2rem',\n        maxWidth: '50em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n    },\n    dataTableBody: {\n      background: 'white',\n    },\n    rowNumCell: {\n      background: grey[200],\n      textAlign: 'left',\n      border: `1px solid ${grey[300]}`,\n      position: 'relative',\n      padding: '0 2px 0 0',\n      whiteSpace: 'nowrap',\n      userSelect: 'none',\n    },\n    rowNumber: {\n      fontWeight: 'normal',\n      display: 'inline-block',\n      flex: 'none',\n      paddingRight: '20px',\n      margin: 0,\n      whiteSpace: 'nowrap',\n    },\n    rowMenuButton: {\n      padding: 0,\n      margin: 0,\n      position: 'absolute',\n      right: 0,\n      display: 'inline-block',\n      whiteSpace: 'nowrap',\n      flex: 'none',\n    },\n    rowMenuButtonIcon: {},\n    rowSelector: {\n      position: 'relative',\n      top: '-2px',\n      margin: 0,\n      padding: '0 0.2rem',\n    },\n    columnHead: {\n      fontWeight: 'normal',\n      background: grey[200],\n      border: `1px solid ${grey[300]}`,\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      whiteSpace: 'nowrap',\n      padding: [[0, theme.spacing(1)]],\n    },\n    sortIndicator: {\n      position: 'relative',\n      top: '0.2rem',\n      fontSize: '1rem',\n    },\n    columnButtonContainer: {\n      display: 'none',\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      background: grey[100],\n      height: '100%',\n      boxSizing: 'border-box',\n      borderLeft: `1px solid ${grey[300]}`,\n    },\n    columnButton: {\n      padding: 0,\n    },\n    topLeftCorner: {\n      background: grey[300],\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      minWidth: theme.spacing(2),\n      textAlign: 'left',\n    },\n    dataRowSelected: {\n      background: indigo[100],\n      '& th': {\n        background: indigo[100],\n      },\n    },\n    emptyMessage: { captionSide: 'bottom' },\n  }\n})\n\nconst CellData = observer(({ cell, spreadsheetModel, columnNumber }) => {\n  const { dataType } = spreadsheetModel.columns.get(columnNumber)\n  if (dataType.DataCellReactComponent) {\n    return (\n      <dataType.DataCellReactComponent\n        cell={cell}\n        dataType={dataType}\n        columnNumber={columnNumber}\n        spreadsheet={spreadsheetModel}\n      />\n    )\n  }\n\n  return cell.text\n})\n\nconst DataRow = observer(({ rowModel, rowNumber, spreadsheetModel }) => {\n  const classes = useStyles()\n  const { hideRowSelection, columnDisplayOrder } = spreadsheetModel\n  let rowClass = classes.dataRow\n  if (rowModel.isSelected) {\n    rowClass += ` ${classes.dataRowSelected}`\n  }\n\n  function labelClick(evt) {\n    rowModel.toggleSelect()\n    evt.stopPropagation()\n    evt.preventDefault()\n  }\n\n  function rowButtonClick(event) {\n    spreadsheetModel.setRowMenuPosition({\n      anchorEl: event.currentTarget,\n      rowNumber,\n    })\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  return (\n    <tr className={rowClass}>\n      <th className={classes.rowNumCell} onClick={labelClick}>\n        <FormControlLabel\n          className={classes.rowNumber}\n          control={\n            hideRowSelection ? null : (\n              <Checkbox\n                className={classes.rowSelector}\n                checked={rowModel.isSelected}\n                onClick={labelClick}\n              />\n            )\n          }\n          label={rowModel.id}\n        />\n        <IconButton\n          className={classes.rowMenuButton}\n          onClick={rowButtonClick}\n          color=\"secondary\"\n        >\n          <ArrowDropDown className={classes.rowMenuButtonIcon} />\n        </IconButton>\n      </th>\n      {columnDisplayOrder.map(colNumber => (\n        <td key={colNumber}>\n          <CellData\n            cell={rowModel.cellsWithDerived[colNumber]}\n            spreadsheetModel={spreadsheetModel}\n            columnNumber={colNumber}\n          />\n        </td>\n      ))}\n    </tr>\n  )\n})\n\nfunction SortIndicator({ model, columnNumber }) {\n  const classes = useStyles()\n  const sortSpec = model.sortColumns.find(c => c.columnNumber === columnNumber)\n\n  if (sortSpec) {\n    const { descending } = sortSpec\n    return descending ? (\n      <KeyboardArrowUpIcon className={classes.sortIndicator} />\n    ) : (\n      <KeyboardArrowDownIcon className={classes.sortIndicator} />\n    )\n  }\n  return null\n}\n\nconst DataTableBody = observer(\n  ({ rows, spreadsheetModel, page, rowsPerPage }) => {\n    const classes = useStyles()\n    return (\n      <tbody className={classes.dataTableBody}>\n        {rows.slice(rowsPerPage * page, rowsPerPage * (page + 1)).map(row => (\n          <DataRow\n            key={row.id}\n            rowNumber={row.id}\n            spreadsheetModel={spreadsheetModel}\n            rowModel={row}\n          />\n        ))}\n      </tbody>\n    )\n  },\n)\n\nconst DataTable = observer(({ model, page, rowsPerPage }) => {\n  const { columnDisplayOrder, columns, hasColumnNames, rowSet } = model\n  const classes = useStyles()\n\n  // column menu active state\n  const [currentColumnMenu, setColumnMenu] = useState(null)\n  function columnButtonClick(colNumber, evt) {\n    setColumnMenu({\n      colNumber,\n      anchorEl: evt.currentTarget,\n    })\n  }\n\n  // column header hover state\n  const [currentHoveredColumn, setHoveredColumn] = useState(null)\n  function columnHeaderMouseOver(colNumber /* , evt */) {\n    setHoveredColumn(colNumber)\n  }\n  function columnHeaderMouseOut(/* colNumber, evt */) {\n    setHoveredColumn(null)\n  }\n\n  const totalRows = rowSet.count\n  const rows = rowSet.sortedFilteredRows\n\n  return (\n    <>\n      <ColumnMenu\n        viewModel={getParent(model)}\n        spreadsheetModel={model}\n        currentColumnMenu={currentColumnMenu}\n        setColumnMenu={setColumnMenu}\n      />\n      <RowMenu viewModel={getParent(model)} spreadsheetModel={model} />\n      <table className={classes.dataTable}>\n        <thead>\n          <tr>\n            <th className={classes.topLeftCorner}>\n              <Tooltip title=\"Unselect all\" placement=\"right\">\n                <span>\n                  <IconButton\n                    className={classes.unselectAllButton}\n                    onClick={model.unselectAll}\n                    disabled={!model.rowSet.selectedCount}\n                    color=\"secondary\"\n                  >\n                    <CropFreeIcon className={classes.columnButtonIcon} />\n                  </IconButton>\n                </span>\n              </Tooltip>\n            </th>\n            {columnDisplayOrder.map(colNumber => (\n              <th\n                className={classes.columnHead}\n                key={colNumber}\n                onMouseOver={columnHeaderMouseOver.bind(null, colNumber)}\n                onMouseOut={columnHeaderMouseOut.bind(null, colNumber)}\n              >\n                <SortIndicator model={model} columnNumber={colNumber} />\n                {(hasColumnNames && columns.get(colNumber).name) ||\n                  numToColName(colNumber)}\n                <div\n                  className={classes.columnButtonContainer}\n                  style={{\n                    display:\n                      currentHoveredColumn === colNumber ||\n                      (currentColumnMenu &&\n                        currentColumnMenu.colNumber === colNumber)\n                        ? 'block'\n                        : 'none',\n                  }}\n                >\n                  <IconButton\n                    className={classes.columnButton}\n                    onClick={columnButtonClick.bind(null, colNumber)}\n                    color=\"secondary\"\n                  >\n                    <ArrowDropDown className={classes.columnButtonIcon} />\n                  </IconButton>\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <DataTableBody\n          rows={rows}\n          spreadsheetModel={model}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        {!rows.length ? (\n          <caption className={classes.emptyMessage}>\n            {totalRows ? 'no rows match criteria' : 'no rows present'}\n          </caption>\n        ) : null}\n      </table>\n    </>\n  )\n})\n\nconst Spreadsheet = observer(({ model, height, page, rowsPerPage }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      {model && model.rowSet && model.rowSet.isLoaded && model.initialized ? (\n        <DataTable model={model} page={page} rowsPerPage={rowsPerPage} />\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  )\n})\n\nexport default Spreadsheet\n","import React, { useState, useEffect } from 'react'\n\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport FilterIcon from '@material-ui/icons/FilterList'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDebounce } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles((/* theme */) => {\n  return {\n    textFilterControlEndAdornment: { marginRight: '-18px' },\n  }\n})\n\nconst TextFilter = observer(({ textFilter }) => {\n  const classes = useStyles()\n  // this paragraph is silliness to debounce the text filter input\n  const [textFilterValue, setTextFilterValue] = useState(\n    textFilter.stringToFind,\n  )\n  const debouncedTextFilter = useDebounce(textFilterValue, 500)\n  useEffect(() => {\n    textFilter.setString(debouncedTextFilter)\n  }, [debouncedTextFilter, textFilter])\n\n  return (\n    <div className={classes.filterControls}>\n      <TextField\n        label=\"text filter\"\n        value={textFilterValue}\n        onChange={evt => setTextFilterValue(evt.target.value)}\n        className={classes.textFilterControl}\n        variant=\"outlined\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlStartAdornment}\n              position=\"start\"\n            >\n              <FilterIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlEndAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => setTextFilterValue('')}\n                color=\"secondary\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  )\n})\n\nconst GlobalFilterControls = observer(({ model }) => {\n  // const classes = useStyles()\n  const textFilter = model.filterControls.rowFullText\n  return <TextFilter textFilter={textFilter} />\n})\n\nexport default GlobalFilterControls\n","import FilterIcon from '@material-ui/icons/FilterList'\nimport CloseIcon from '@material-ui/icons/Close'\n/* eslint-disable react/prop-types */\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport React from 'react'\nimport { Grid, IconButton, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    columnName: { verticalAlign: 'middle', paddingRight: '0.3em' },\n    columnFilter: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n    },\n    filterIcon: { position: 'relative', top: '12px' },\n    filterIconBg: {\n      background: theme.palette.tertiary.main,\n      color: 'white',\n      padding: [[0, theme.spacing(1.5)]],\n    },\n  }\n})\n\nfunction FilterOperations({ filterModel }) {\n  if (filterModel) {\n    return <filterModel.ReactComponent filterModel={filterModel} />\n  }\n  return null\n}\n\nconst ColumnFilterControls = observer(\n  ({ viewModel, filterModel, columnNumber, height }) => {\n    const classes = useStyles()\n\n    const removeFilter = () => {\n      const filterControls = getParent(filterModel, 2)\n      filterControls.removeColumnFilter(filterModel)\n    }\n\n    const columnDefinition = viewModel.spreadsheet.columns[columnNumber]\n    if (!columnDefinition) {\n      throw new Error('no column definition! filters are probably out of date')\n    }\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        className={classes.columnFilter}\n        style={{ height }}\n      >\n        <Grid item className={classes.filterIconBg}>\n          <FilterIcon className={classes.filterIcon} />\n        </Grid>\n        <Grid item>\n          <IconButton\n            onClick={removeFilter}\n            title=\"remove filter\"\n            color=\"secondary\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography className={classes.columnName} component=\"span\">\n            {columnDefinition.name}\n          </Typography>{' '}\n          <FilterOperations filterModel={filterModel} />\n        </Grid>\n      </Grid>\n    )\n  },\n)\n\nexport default ColumnFilterControls\n","import React from 'react'\nimport {\n  FormGroup,\n  Grid,\n  IconButton,\n  TablePagination,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\n\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './Spreadsheet'\nimport GlobalFilterControls from './GlobalFilterControls'\nimport ColumnFilterControls from './ColumnFilterControls'\n\nconst headerHeight = 52\nconst colFilterHeight = 46\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: 'white',\n    overflow: 'hidden',\n  },\n  header: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  contentArea: { overflow: 'auto' },\n  columnFilter: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  viewControls: {\n    margin: 0,\n  },\n  rowCount: {\n    marginLeft: theme.spacing(1),\n  },\n  statusBar: {\n    position: 'absolute',\n    background: theme.palette.background.light,\n    left: 0,\n    bottom: 0,\n    height: statusBarHeight,\n    width: '100%',\n    boxSizing: 'border-box',\n    borderTop: '1px outset #b1b1b1',\n    paddingLeft: theme.spacing(1),\n  },\n  verticallyCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  textFilterControlAdornment: { marginRight: '-18px' },\n}))\n\nconst ViewControls = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <Grid\n      className={classes.viewControls}\n      container\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <IconButton\n          onClick={() => model.setImportMode()}\n          className={classes.iconButton}\n          title=\"open a tabular file\"\n          data-testid=\"spreadsheet_view_open\"\n          color=\"secondary\"\n        >\n          <FolderOpenIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  )\n})\n\nconst RowCountMessage = observer(({ spreadsheet }) => {\n  if (spreadsheet && spreadsheet.rowSet.isLoaded) {\n    const {\n      passingFiltersCount,\n      count,\n      selectedCount,\n      selectedAndPassingFiltersCount,\n    } = spreadsheet.rowSet\n\n    let rowMessage\n    if (passingFiltersCount !== count) {\n      rowMessage = `${spreadsheet.rowSet.passingFiltersCount} rows of ${spreadsheet.rowSet.count} total`\n      if (selectedCount) {\n        rowMessage += `, ${selectedAndPassingFiltersCount} selected`\n        const selectedAndNotPassingFiltersCount =\n          selectedCount - selectedAndPassingFiltersCount\n        if (selectedAndNotPassingFiltersCount) {\n          rowMessage += ` (${selectedAndNotPassingFiltersCount} selected rows do not pass filters)`\n        }\n      }\n    } else {\n      rowMessage = `${spreadsheet.rowSet.count} rows`\n      if (selectedCount) {\n        rowMessage += `, ${selectedCount} selected`\n      }\n    }\n    return rowMessage\n  }\n  return null\n})\n\nconst SpreadsheetView = observer(({ model }) => {\n  const classes = useStyles()\n\n  const { spreadsheet, filterControls } = model\n\n  const colFilterCount = filterControls.columnFilters.length\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(100)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  return (\n    <div\n      className={classes.root}\n      style={{ height: model.height, width: model.width }}\n      data-testid={model.id}\n    >\n      <Grid container direction=\"row\" className={classes.header}>\n        {model.hideViewControls ? null : (\n          <Grid item>\n            <ViewControls model={model} />\n          </Grid>\n        )}\n        {model.mode !== 'display' || model.hideFilterControls ? null : (\n          <Grid item>\n            <GlobalFilterControls model={model} />\n          </Grid>\n        )}\n      </Grid>\n\n      {model.mode !== 'display' || model.hideFilterControls\n        ? null\n        : model.filterControls.columnFilters.map((filter, filterNumber) => {\n            return (\n              <ColumnFilterControls\n                key={`${filter.columnNumber}-${filterNumber}`}\n                viewModel={model}\n                filterModel={filter}\n                columnNumber={filter.columnNumber}\n                height={colFilterHeight}\n              />\n            )\n          })}\n\n      <div\n        className={classes.contentArea}\n        style={{ height: model.height - headerHeight }}\n      >\n        {model.mode !== 'import' ? null : (\n          <ImportWizard model={model.importWizard} />\n        )}\n        <div\n          style={{\n            position: 'relative',\n            display: model.mode === 'display' ? undefined : 'none',\n          }}\n        >\n          <Spreadsheet\n            page={page}\n            rowsPerPage={rowsPerPage}\n            model={spreadsheet}\n            height={\n              model.height -\n              headerHeight -\n              colFilterCount * colFilterHeight -\n              statusBarHeight\n            }\n          />\n        </div>\n      </div>\n\n      <div\n        className={classes.statusBar}\n        style={{ display: model.mode === 'display' ? undefined : 'none' }}\n      >\n        {spreadsheet ? (\n          <FormGroup row>\n            <div className={classes.verticallyCenter}>\n              <RowCountMessage spreadsheet={spreadsheet} />\n            </div>\n            <div className={classes.spacer} />\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100, 1000]}\n              count={spreadsheet.rowSet.count}\n              component=\"div\"\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n            <div className={classes.spacer} />\n          </FormGroup>\n        ) : null}\n      </div>\n      {model.hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          style={{\n            height: model.dragHandleHeight,\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      )}\n    </div>\n  )\n})\n\nexport default SpreadsheetView\n"],"sourceRoot":""}